htmlwidgets::saveWidget(story_of_two_cities_july_plotly, "./out/story_of_two_cities_july_plotly.html")
story_of_two_cities_july_plotly
graph_out_dir = "./out/story_of_two_cities_july"
#
cities_in_study = c("Sevilla", "Burgos")
month_in_study = 7.
year_in_middle = median(climatology_cities_dat$year)
# Prepare Name of columns (for tooltips)
climatology_cities_ext_dat <- climatology_cities_dat |>
mutate(City = city, Year = year, "Temp Avgr." = t2m_c )
labels_dat <- cities_in_study |> map(function(city_name) {
climatology_cities_ext_dat |>
filter(city == city_name, year == year_in_middle, month == month_in_study) |>
pull(t2m_c)
}) |>
unlist() |>
(\(y_values) {
print(y_values)
tibble( city = cities_in_study, x = year_in_middle, y = y_values)
})()
story_of_two_cities_july_base_plot <- climatology_cities_ext_dat |>
filter(city %in% cities_in_study, month == 7) |>
ggplot(aes(x = Year, y = `Temp Avgr.`, group = City)) +
theme(plot.title = element_text(size = 14)) +
labs(
x = "Year",
y = "Average temperature Cº",
title = "Average Temperature in July - Tale of two Cities? or the same story..",
caption = "Data from: CDS - ERA5 monthly averaged data on single levels from 1959 to present[1959-2022]"
)
story_of_two_cities_july_plot = story_of_two_cities_july_base_plot +
geom_point() +
geom_line(stat = "identity") +
geom_smooth(method = "lm", se = FALSE)   +
geom_label(data = labels_dat, alpha = 0.75, inherit.aes = FALSE, aes(x, y, label = city))
story_of_two_cities_july_plot
# Save to svg
svglite(paste(graph_out_dir, "/svg/story_of_two_cities_july_plot.svg"))
if (!"fs" %in% installed.packages()) install.packages("fs")
library(fs)
# Create out directories
graph_out_dir = "./out/story_of_two_cities_july"
graphs_svg_sub_dir_path = path(graph_out_dir, "/svg")
graphs_plotly_sub_dir_path = path(graph_out_dir, "/plotly")
# Create out directories
graph_out_dir = "./out/story_of_two_cities_july"
graphs_svg_sub_dir_path = path(graph_out_dir, "/svg")
graphs_plotly_sub_dir_path = path(graph_out_dir, "/plotly")
dir_create(path(graphs_svg_sub_dir_path))
dir_create(path(graphs_plotly_sub_dir_path))
# Create out directories
graph_out_dir = "./out/story_of_two_cities_july"
graphs_svg_sub_dir_path = path(graph_out_dir, "/svg")
graphs_plotly_sub_dir_path = path(graph_out_dir, "/plotly")
dir_create(path(graphs_svg_sub_dir_path))
dir_create(path(graphs_plotly_sub_dir_path))
#
cities_in_study = c("Sevilla", "Burgos")
month_in_study = 7.
year_in_middle = median(climatology_cities_dat$year)
# Prepare Name of columns (for tooltips)
climatology_cities_ext_dat <- climatology_cities_dat |>
mutate(City = city, Year = year, "Temp Avgr." = t2m_c )
labels_dat <- cities_in_study |> map(function(city_name) {
climatology_cities_ext_dat |>
filter(city == city_name, year == year_in_middle, month == month_in_study) |>
pull(t2m_c)
}) |>
unlist() |>
(\(y_values) {
print(y_values)
tibble( city = cities_in_study, x = year_in_middle, y = y_values)
})()
story_of_two_cities_july_base_plot <- climatology_cities_ext_dat |>
filter(city %in% cities_in_study, month == 7) |>
ggplot(aes(x = Year, y = `Temp Avgr.`, group = City)) +
theme(plot.title = element_text(size = 14)) +
labs(
x = "Year",
y = "Average temperature Cº",
title = "Average Temperature in July - Tale of two Cities? or the same story..",
caption = "Data from: CDS - ERA5 monthly averaged data on single levels from 1959 to present[1959-2022]"
)
story_of_two_cities_july_plot = story_of_two_cities_july_base_plot +
geom_point() +
geom_line(stat = "identity") +
geom_smooth(method = "lm", se = FALSE)   +
geom_label(data = labels_dat, alpha = 0.75, inherit.aes = FALSE, aes(x, y, label = city))
story_of_two_cities_july_plot
# Save to svg
svglite(path(graphs_svg_sub_dir_path, "/story_of_two_cities_july_plot", ext = "svg"))
story_of_two_cities_july_plot
invisible(
dev.off()
)
# Same graph interactive Plotly
story_of_two_cities_july_plotly <- ggplotly(story_of_two_cities_july_plot) |>
add_annotations(
x = labels_dat$x,
y = labels_dat$y,
text = labels_dat$city,
xref = "x",
yref = "y",
showarrow = TRUE,
arrowhead = 1,
arrowsize = 0.5,
arrowside = "none",
ax = 20,
ay = -40,
bgcolor="white",
opacity=0.8
)
htmlwidgets::saveWidget(
story_of_two_cities_july_plotly,
path(graphs_plotly_sub_dir_path, "/story_of_two_cities_july_plot", ext ="html")
)
story_of_two_cities_july_plotly
string1 = '
str2 = paste(string1 , "aha", sep = "\n")
str2
str2
'
string1 = '<!DOCTYPE html>
str2 = paste(string1 , "aha", sep = "\n")
string1 = '<!DOCTYPE html>
string1
</html>"
string1 = "<!DOCTYPE html>
</html>'
string1 = '<!DOCTYPE html>
string1 <- '<!DOCTYPE html>
string1 <- '<!DOCTYPE html>
<html lang="en">
string1 <- '<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>
<script src="index.js"></script>
</body>
</html>'
string1
str2 = paste(string1 , "aha", sep = "\n")
str2
str2 = paste(
'<!DOCTYPE html>
<html lang="en">
<head>
<meta cha' ,
"aha",
sep = "\n"
)
str2
str2 = paste(
'<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>
<script src="index.js"></script>
</body>
</html>'
' ,
"aha",
sep = "\n"
)
str2
str2 = paste(
'<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>
<script src="index.js"></script>
</body>
</html>'
',
"aha",
sep = "\n"
)
str2 = paste(
'
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta cha
' ,
"aha",
sep = "\n"
)
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta cha
' ,
"aha",
sep = "\n"
)
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
' ,
"aha",
sep = "\n"
)
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>
<script src="index.js"></script>
</body>
' ,
"aha",
sep = "\n"
)
str2
graphs_path_files = list()
graphs_path_files
# Save to svg
svg_file_path <- path(graphs_svg_sub_dir_path, "/story_of_two_cities_july_plot", ext = "svg")
graphs_path_files <- list(graphs_path_files, svg_file_path)
graphs_path_files
plotly_file_path <- path(graphs_svg_sub_dir_path, "/story_of_two_cities_july_plot", ext = "html")
graphs_path_files <- list(graphs_path_files, plotly_file_path)
graphs_path_files
graphs_path_files = c()
graphs_path_files <- c(graphs_path_files, svg_file_path)
graphs_path_files
graphs_path_files <- c(graphs_path_files, plotly_file_path)
graphs_path_files
html_graph_links = map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |>
string1 <- '<!DOCTYPE html>
html_graph_links
html_graph_links = map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |>
html_graph_links = map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
})
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
})
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> c()
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> unlist()
html_graph_links
html_graph_links[[1]]
html_graph_links[[2]]
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> unlist() |> paste(sep = "\n")
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> unlist() |> paste(sep = "\n", collapse='')
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> unlist() |> paste(sep = "\n", collapse='\n')
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp("<a href=\"https://www.w3schools.com/\">Visit W3Schools.com!</a>")
}) |> unlist() |> paste(collapse='\n')
html_graph_links
html_graph_links <- graphs_path_files |> map(function(city_name) {
str_interp('<a href="https://www.w3schools.com/">Visit W3Schools.com!</a>')
}) |> unlist() |> paste(collapse='\n')
html_graph_links
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>',
html_graph_links,
'  </body>
' ,
"aha",
sep = "\n"
)
str2
str2 = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>',
html_graph_links,
'  </body>
' ,
"aha",
sep = "\n"
)
write_file(x, path(graphs_svg_sub_dir_path, "/main", ext = "html"))
write_file(str2, path(graphs_svg_sub_dir_path, "/main", ext = "html"))
html_graph_links <- graphs_path_files |> map(function(url_relative_path) {
str_interp('<a href="${url_relative_path}"> A graph</a>')
}) |> unlist() |> paste(collapse='\n')
html_page = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>',
html_graph_links,
'  </body>
' ,
sep = "\n"
)
write_file(html_page, path(graph_out_dir, "/index", ext = "html"))
# Create out directories
graph_out_dir = "./out'
graph_main_dir_path = path(graph_out_dir, "/story_of_two_cities_july")
graph_main_dir = path("/story_of_two_cities_july")
graph_main_dir = "/story_of_two_cities_july"
graph_main_dir = "/story_of_two_cities_july"
# Create out directories
graph_out_dir = "./out'
graph_main_dir = "/story_of_two_cities_july"
graph_main_dir_path = paste(graph_out_dir, graph_main_dir)
graph_main_dir_path
graph_out_dir <- "./out'
graph_main_dir <- "/story_of_two_cities_july
graph_out_dir <- "./out"
graph_main_dir <- "/story_of_two_cities_july
graph_main_dir_path <- paste(graph_out_dir, graph_main_dir)
graph_main_dir_path
graph_out_dir <- "./out"
graph_main_dir <- "/story_of_two_cities_july"
graph_main_dir_path <- paste(graph_out_dir, graph_main_dir)
graph_main_dir_path
graph_out_dir <- "./out"
graph_main_dir <- "/story_of_two_cities_july"
graph_main_dir_path <- path(graph_out_dir, graph_main_dir)
graphs_svg_sub_dir_path = path(graph_main_dir_path, "/svg")
graph_out_dir <- "./out"
graph_main_dir <- "/story_of_two_cities_july"
graph_main_dir_path <- path(graph_out_dir, graph_main_dir)
graphs_svg_sub_dir_path = path(graph_main_dir_path, "/svg")
graphs_plotly_sub_dir_path = path(graph_main_dir_path, "/plotly")
graphs_plotly_sub_dir_path
# Create out directories
graph_out_dir <- "./out"
graph_main_dir <- "/story_of_two_cities_july"
graph_main_dir_path <- path(graph_out_dir, graph_main_dir)
graphs_svg_sub_dir_path = path(graph_main_dir_path, "/svg")
graphs_plotly_sub_dir_path = path(graph_main_dir_path, "/plotly")
dir_create(path(graphs_svg_sub_dir_path))
dir_create(path(graphs_plotly_sub_dir_path))
graphs_path_files = c()
#
cities_in_study = c("Sevilla", "Burgos")
month_in_study = 7.
year_in_middle = median(climatology_cities_dat$year)
# Prepare Name of columns (for tooltips)
climatology_cities_ext_dat <- climatology_cities_dat |>
mutate(City = city, Year = year, "Temp Avgr." = t2m_c )
labels_dat <- cities_in_study |> map(function(city_name) {
climatology_cities_ext_dat |>
filter(city == city_name, year == year_in_middle, month == month_in_study) |>
pull(t2m_c)
}) |>
unlist() |>
(\(y_values) {
print(y_values)
tibble( city = cities_in_study, x = year_in_middle, y = y_values)
})()
story_of_two_cities_july_base_plot <- climatology_cities_ext_dat |>
filter(city %in% cities_in_study, month == 7) |>
ggplot(aes(x = Year, y = `Temp Avgr.`, group = City)) +
theme(plot.title = element_text(size = 14)) +
labs(
x = "Year",
y = "Average temperature Cº",
title = "Average Temperature in July - Tale of two Cities? or the same story..",
caption = "Data from: CDS - ERA5 monthly averaged data on single levels from 1959 to present[1959-2022]"
)
story_of_two_cities_july_plot = story_of_two_cities_july_base_plot +
geom_point() +
geom_line(stat = "identity") +
geom_smooth(method = "lm", se = FALSE)   +
geom_label(data = labels_dat, alpha = 0.75, inherit.aes = FALSE, aes(x, y, label = city))
story_of_two_cities_july_plot
# Save to svg
svg_file_path <- path(graphs_svg_sub_dir_path, "/story_of_two_cities_july_plot", ext = "svg")
svglite(svg_file_path)
story_of_two_cities_july_plot
invisible(
dev.off()
)
graphs_path_files <- c(graphs_path_files, svg_file_path)
# Same graph interactive Plotly
story_of_two_cities_july_plotly <- ggplotly(story_of_two_cities_july_plot) |>
add_annotations(
x = labels_dat$x,
y = labels_dat$y,
text = labels_dat$city,
xref = "x",
yref = "y",
showarrow = TRUE,
arrowhead = 1,
arrowsize = 0.5,
arrowside = "none",
ax = 20,
ay = -40,
bgcolor="white",
opacity=0.8
)
plotly_file_path <- path(graphs_svg_sub_dir_path, "/story_of_two_cities_july_plot", ext = "html")
htmlwidgets::saveWidget(
story_of_two_cities_july_plotly,
plotly_file_path
)
story_of_two_cities_july_plotly
graphs_path_files <- c(graphs_path_files, plotly_file_path)
#########################################
#
# Genneate small html with links
#
#########################################
html_graph_links <- graphs_path_files |> map(function(file_path) {
str_interp('<a href="${path(graph_out_dir, path_file(file_path))}"> A graph</a>')
}) |> unlist() |> paste(collapse='\n')
html_page = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>',
html_graph_links,
'  </body>
' ,
sep = "\n"
)
write_file(html_page, path(graph_out_dir, "/index", ext = "html"))
html_graph_links <- graphs_path_files |> map(function(file_path) {
str_interp('<a href="${path(graph_main_dir, path_file(file_path))}"> A graph</a>')
}) |> unlist() |> paste(collapse='\n')
html_page = paste(
'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Graphs</title>
</head>
<body>',
html_graph_links,
'  </body>
' ,
sep = "\n"
)
write_file(html_page, path(graph_out_dir, "/index", ext = "html"))
